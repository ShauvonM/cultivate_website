{"version":3,"sources":["../src/ts/app/service/team.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAE3C,0BAAqB,mBAAmB,CAAC,CAAA;AAEzC;IAAA;IAYA,CAAC;IAAD,aAAC;AAAD,CAZA,AAYC,IAAA;AAZY,cAAM,SAYlB,CAAA;AAGD;IAGI;QAFQ,WAAM,GAAa,EAAE,CAAC;IAEd,CAAC;IAGjB,6BAAO,GAAP;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAI,CAAC,CAAC;QAC9C,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,iCAAW,GAAX;QAAA,iBAYC;QAXG,MAAM,CAAC,IAAI,OAAO,CAAW,UAAC,OAAO,EAAE,MAAM;YACzC,KAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;gBACrB,IAAI,QAAQ,GAAa,EAAE,CAAC;gBAC5B,IAAI,CAAC,OAAO,CAAC,UAAC,MAAM;oBAChB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACrC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC1B,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAW,GAAX;QAAA,iBAYC;QAXG,MAAM,CAAC,IAAI,OAAO,CAAW,UAAC,OAAO,EAAE,MAAM;YACzC,KAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;gBACrB,IAAI,QAAQ,GAAa,EAAE,CAAC;gBAC5B,IAAI,CAAC,OAAO,CAAC,UAAC,MAAM;oBAChB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACtC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC1B,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+BAAS,GAAT,UAAU,GAAW;QAArB,iBAUC;QATG,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;YACvC,KAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;gBACrB,IAAI,CAAC,OAAO,CAAC,UAAC,MAAM;oBAChB,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;wBACpB,OAAO,CAAC,MAAM,CAAC,CAAC;oBACpB,CAAC;gBACL,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;IACN,CAAC;IApDL;QAAC,iBAAU,EAAE;;mBAAA;IAsDb,kBAAC;AAAD,CArDA,AAqDC,IAAA;AArDY,mBAAW,cAqDvB,CAAA","file":"team.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { TEAM } from '../data/team.data';\r\n\r\nexport class Person {\r\n    key: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    title?: string;\r\n    founder?: boolean;\r\n    headshotUrl?: string;\r\n    bio: string;\r\n    website?: string;\r\n    email?: string;\r\n    phone?: number;\r\n    inactive?: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class TeamService {\r\n    private people: Person[] = [];\r\n\r\n    constructor() { }\r\n\r\n    private _teamPromise: Promise<Person[]>;\r\n    getTeam(): Promise<Person[]> {\r\n        if (!this._teamPromise) {\r\n            this._teamPromise = Promise.resolve(TEAM);\r\n        }\r\n        return this._teamPromise;\r\n    }\r\n\r\n    getFounders(): Promise<Person[]> {\r\n        return new Promise<Person[]>((resolve, reject) => {\r\n            this.getTeam().then((team) => {\r\n                let founders: Person[] = [];\r\n                team.forEach((person) => {\r\n                    if (person.founder && !person.inactive) {\r\n                        founders.push(person);\r\n                    }\r\n                });\r\n                resolve(founders);\r\n            });\r\n        });\r\n    }\r\n\r\n    getTeachers(): Promise<Person[]> {\r\n        return new Promise<Person[]>((resolve, reject) => {\r\n            this.getTeam().then((team) => {\r\n                let teachers: Person[] = [];\r\n                team.forEach((person) => {\r\n                    if (!person.founder && !person.inactive) {\r\n                        teachers.push(person);\r\n                    }\r\n                });\r\n                resolve(teachers);\r\n            });\r\n        });\r\n    }\r\n\r\n    getPerson(key: string): Promise<Person> {\r\n        return new Promise<Person>((resolve, reject) => {\r\n            this.getTeam().then((team) => {\r\n                team.forEach((person) => {\r\n                    if (person.key == key) {\r\n                        resolve(person);\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n}"]}